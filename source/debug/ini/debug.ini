MODE COM1 9600,0,8,1
//assign com1 SOUT
ASSIGN COM1 < SIN > SOUT   
//ASSIGN WIN <SIN >SOUT
KILL FUNC *
KILL BUTTON *


//swatch(0.5)
DEFINE BUTTON "adc", "adc()"
signal void adc (void) {
//  while (1) {                      /* repeat forever       */
    P14= 0;                    /* set PORTA bit 0      */
	printf("adc is on\n"); 
   twatch(500);
  //}                                /* repeat               */
}

DEFINE BUTTON "k1 ", "k1()"
signal void k1 (void) {
P2.0= 0; 
    //P20= 0;                  
	printf("K1 down\n"); 
      swatch(0.17);
    P2.0= 1;
    //P20= 1;            
     swatch(0.17); 
	printf("K1 up\n");
}


DEFINE BUTTON "k2 ", "k2()"
signal void k2 (void) {
    P2.1= 0;     
    //P21= 0;                   
	printf("K2 down\n"); 
      swatch(0.17);
    P2.1= 1;  
    //P21= 1;            
     swatch(0.17);
	printf("K2 up\n"); 
}


DEFINE BUTTON "k3 ", "k3()"
signal void k3 (void) {
    P2.2= 0; 
    //P22= 0;                   
	printf("K3 down\n"); 
      swatch(0.07);
    P2.2= 1; 
	//P22= 1;            
     swatch(0.07);
	printf("K3 up\n"); 
}




DEFINE BUTTON "kx4 enter/", "kx4()"
signal void kx4 (void) {

    P13= 0;                    /* set PORTA bit 0      */
	printf("Kx4 down\n"); 
      swatch(0.07);

    P13= 1;            
     swatch(0.07);
	printf("Kx4 up\n"); 
}

DEFINE BUTTON "<-- kx1_left  ", "kx1_left()"
signal void kx1_left (void) {

    P12= 0;                    /* set PORTA bit 0      */

	printf("kx1_left down\n"); 
      swatch(0.07);
    P11= 0; 
      swatch(0.07);     

    P12= 1;            
     swatch(0.07);
    P11= 1; 
      swatch(0.07);   
	printf("kx1_left up\n"); 

}

DEFINE BUTTON "kx1_right--> ", "kx1_right()"
signal void kx1_right (void) {

    P11= 0;                    /* set PORTA bit 0      */

	printf("kx1_right down\n"); 
      swatch(0.07);
    P12= 0; 
      swatch(0.07);     

    P11= 1;            
     swatch(0.07);
    P12= 1; 
      swatch(0.07);   
	printf("kx1_right up\n"); 

}
DEFINE BUTTON "My Registers", "MyRegs()"

FUNC void MyRegs (void) {
  printf ("---------- MyRegs() ----------\n");
  printf (" R4 R8 R9 R10 R11 R12\n");
  printf (" %04X %04X %04X %04X %04X %04X\n",
            R0,  R1,  R2,  R3, R4, R5);
  printf ("------------------------------\n");
}



//bs write P3,1,"check_moto()"//如果有写p2的动作则会执行这个 signal函数。 
//signal void check_moto (void) 



